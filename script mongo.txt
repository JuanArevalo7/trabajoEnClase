show dbs
admin   40.00 KiB
config  60.00 KiB
local   80.00 KiB
use admin
switched to db admin
use tienda
switched to db tienda
show dbs
admin    40.00 KiB
config  108.00 KiB
local    80.00 KiB
db
tienda
db.createCollection("producto")
{ ok: 1 }
show collections
producto
db.productos.insertOne({nombre:"laptop",precio:1200000,cantidad:10})
{
  acknowledged: true,
  insertedId: ObjectId('680fce993f0265651e72d4d6')
}
db.producto.insertMany([{nombre:"mouse",precio:60000,cantidad:15}],{nombre:"teclados",precio:100000,canidad:15},{nombre:"USB",precio:20000,cantidad:5})
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('680fd04d3f0265651e72d4d7')
  }
}
db.producto.find()
{
  _id: ObjectId('680fd04d3f0265651e72d4d7'),
  nombre: 'mouse',
  precio: 60000,
  cantidad: 15
}
db.producto.find().pretty
[Function: pretty] {
  returnType: 'this',
  serverVersions: [ '0.0.0', '999.999.999' ],
  apiVersions: [ 0, Infinity ],
  topologies: [ 'ReplSet', 'Sharded', 'LoadBalanced', 'Standalone' ],
  returnsPromise: false,
  deprecated: false,
  platforms: [ 'Compass', 'Browser', 'CLI' ],
  isDirectShellCommand: false,
  acceptsRawInput: false,
  shellCommandCompleter: undefined,
  help: [Function (anonymous)] Help
}
db.productos.find()
{
  _id: ObjectId('680fce993f0265651e72d4d6'),
  nombre: 'laptop',
  precio: 1200000,
  cantidad: 10
}
db.producto.insertOne({nombre: 'laptop',
  precio: 1200000,
  cantidad: 10})
{
  acknowledged: true,
  insertedId: ObjectId('680fd0c03f0265651e72d4d8')
}
db.producto.find()
{
  _id: ObjectId('680fd04d3f0265651e72d4d7'),
  nombre: 'mouse',
  precio: 60000,
  cantidad: 15
}
{
  _id: ObjectId('680fd0c03f0265651e72d4d8'),
  nombre: 'laptop',
  precio: 1200000,
  cantidad: 10
}
db.producto.insertOne(nombre:"USB",precio:20000,cantidad:5})
SyntaxError: Unexpected token, expected "," (1:28)

[0m[31m[1m>[22m[39m[90m 1 |[39m db[33m.[39mproducto[33m.[39minsertOne(nombre[33m:[39m[32m"USB"[39m[33m,[39mprecio[33m:[39m[35m20000[39m[33m,[39mcantidad[33m:[39m[35m5[39m})
 [90m   |[39m                             [31m[1m^[22m[39m[0m
db.producto.insertOne({nombre:"USB",precio:20000,cantidad:5})
{
  acknowledged: true,
  insertedId: ObjectId('680fd0fd3f0265651e72d4d9')
}
clear
ReferenceError: clear is not defined
db.producto.find()
{
  _id: ObjectId('680fd04d3f0265651e72d4d7'),
  nombre: 'mouse',
  precio: 60000,
  cantidad: 15
}
{
  _id: ObjectId('680fd0c03f0265651e72d4d8'),
  nombre: 'laptop',
  precio: 1200000,
  cantidad: 10
}
{
  _id: ObjectId('680fd0fd3f0265651e72d4d9'),
  nombre: 'USB',
  precio: 20000,
  cantidad: 5
}
db.producto.find({precio:{$gt:20000}})
{
  _id: ObjectId('680fd04d3f0265651e72d4d7'),
  nombre: 'mouse',
  precio: 60000,
  cantidad: 15
}
{
  _id: ObjectId('680fd0c03f0265651e72d4d8'),
  nombre: 'laptop',
  precio: 1200000,
  cantidad: 10
}
db.producto.find({precio:{$eq:20000}})
{
  _id: ObjectId('680fd0fd3f0265651e72d4d9'),
  nombre: 'USB',
  precio: 20000,
  cantidad: 5
}
db.producto.find(precio:{})
SyntaxError: Unexpected token, expected "," (1:23)

[0m[31m[1m>[22m[39m[90m 1 |[39m db[33m.[39mproducto[33m.[39mfind(precio[33m:[39m{})
 [90m   |[39m                        [31m[1m^[22m[39m[0m
db.producto.find(precio:{$lt:500000})
SyntaxError: Unexpected token, expected "," (1:23)

[0m[31m[1m>[22m[39m[90m 1 |[39m db[33m.[39mproducto[33m.[39mfind(precio[33m:[39m{$lt[33m:[39m[35m500000[39m})
 [90m   |[39m                        [31m[1m^[22m[39m[0m
db.producto.find({precio:{$lt:500000}})
{
  _id: ObjectId('680fd04d3f0265651e72d4d7'),
  nombre: 'mouse',
  precio: 60000,
  cantidad: 15
}
{
  _id: ObjectId('680fd0fd3f0265651e72d4d9'),
  nombre: 'USB',
  precio: 20000,
  cantidad: 5
}
db.producto.find({cantidad:{$ne:0}})